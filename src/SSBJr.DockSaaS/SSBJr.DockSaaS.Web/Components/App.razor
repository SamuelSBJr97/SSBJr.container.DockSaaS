<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <title>DockSaaS - Cloud Services Platform</title>
    <meta name="description" content="DockSaaS - Comprehensive multi-tenant SaaS platform for managing AWS-like cloud services" />
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    
    <!-- MudBlazor CSS -->
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <!-- Application CSS -->
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="css/dashboard.css" />
    <link rel="stylesheet" href="SSBJr.DockSaaS.Web.styles.css" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="favicon.png" />
    
    <HeadOutlet />
</head>

<body>
    <Routes />
    
    <!-- Loading overlay for better UX -->
    <div id="loading-overlay" class="loading-overlay">
        <div class="loading-spinner">
            <div class="spinner"></div>
            <p>Loading DockSaaS...</p>
        </div>
    </div>

    <!-- Scripts loaded in correct order -->
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    
    <!-- Only load Blazored LocalStorage if the package exists -->
    <script>
        // Check if Blazored LocalStorage is available before loading
        var blazoredScript = document.createElement('script');
        blazoredScript.src = '_content/Blazored.LocalStorage/blazored-localstorage.js';
        blazoredScript.onerror = function() {
            console.warn('Blazored LocalStorage script not found - this is normal if the package is not installed');
        };
        blazoredScript.onload = function() {
            console.log('Blazored LocalStorage loaded successfully');
        };
        document.head.appendChild(blazoredScript);
    </script>
    
    <!-- Dashboard Charts - load after other dependencies -->
    <script src="js/dashboard-charts.js"></script>
    
    <!-- Application initialization -->
    <script>
        // Hide loading overlay when Blazor is ready
        if (typeof Blazor !== 'undefined') {
            Blazor.addEventListener('enhancedload', function () {
                console.log('Blazor enhanced load complete');
                hideLoadingOverlay();
            });
        }

        // Fallback for older Blazor versions
        window.addEventListener('load', function() {
            console.log('Window load complete');
            setTimeout(hideLoadingOverlay, 1000);
        });

        function hideLoadingOverlay() {
            const loadingOverlay = document.getElementById('loading-overlay');
            if (loadingOverlay) {
                loadingOverlay.style.opacity = '0';
                setTimeout(() => {
                    loadingOverlay.style.display = 'none';
                }, 300);
            }
        }

        // Show loading overlay during navigation
        window.blazorNavigating = function() {
            const loadingOverlay = document.getElementById('loading-overlay');
            if (loadingOverlay) {
                loadingOverlay.style.display = 'flex';
                loadingOverlay.style.opacity = '1';
            }
        };

        // Hide loading overlay after navigation
        window.blazorNavigated = function() {
            setTimeout(hideLoadingOverlay, 500);
        };

        // Initialize charts when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM Content Loaded');
            
            // Wait for Chart.js to be available
            function initCharts() {
                if (typeof Chart !== 'undefined' && window.initializeCharts) {
                    console.log('Initializing charts...');
                    window.initializeCharts();
                } else {
                    console.log('Waiting for Chart.js to load...');
                    setTimeout(initCharts, 100);
                }
            }
            
            setTimeout(initCharts, 500);
        });

        // Error handling for uncaught JavaScript errors
        window.addEventListener('error', function(e) {
            // Don't show errors for known harmless issues
            if (e.error && e.error.message) {
                const message = e.error.message.toLowerCase();
                if (message.includes('message port closed') || 
                    message.includes('blazored-localstorage') ||
                    message.includes('localstorage') ||
                    message.includes('the message port closed before a response was received')) {
                    // These are usually harmless - just log them
                    console.warn('Non-critical error ignored:', message);
                    return;
                }
            }
            console.error('JavaScript error:', e.error);
        });

        // Handle unhandled promise rejections
        window.addEventListener('unhandledrejection', function(e) {
            const reason = e.reason ? e.reason.toString() : '';
            if (reason.includes('message port closed') || 
                reason.includes('localstorage') ||
                reason.includes('the message port closed before a response was received')) {
                console.warn('Non-critical promise rejection ignored:', reason);
                e.preventDefault();
                return;
            }
            console.warn('Unhandled promise rejection:', e.reason);
        });

        console.log('DockSaaS Dashboard initialized successfully');
    </script>
</body>

</html>
