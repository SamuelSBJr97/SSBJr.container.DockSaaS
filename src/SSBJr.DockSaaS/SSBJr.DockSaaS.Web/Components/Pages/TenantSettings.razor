@page "/settings/tenant"
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Tenant Settings - DockSaaS</PageTitle>

<h3 class="text-2xl font-bold text-gray-900 mb-6">Tenant Settings</h3>

<div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
    <!-- General Settings -->
    <div class="lg:col-span-2">
        <div class="bg-white rounded-lg shadow-lg mb-6">
            <div class="px-6 py-4 border-b border-gray-200">
                <h6 class="text-lg font-semibold text-gray-900">General Information</h6>
            </div>
            <div class="p-6">
                <form @onsubmit="HandleBasicSettingsSubmit" @onsubmit:preventDefault="true">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Organization Name</label>
                            <input @bind="tenantSettings.Name"
                                   type="text" 
                                   required
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Plan</label>
                            <select @bind="tenantSettings.Plan" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3">
                                <option value="Free">Free</option>
                                <option value="Pro">Pro</option>
                                <option value="Enterprise">Enterprise</option>
                            </select>
                        </div>
                        <div class="md:col-span-2">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                            <textarea @bind="tenantSettings.Description"
                                      rows="3"
                                      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3"></textarea>
                        </div>
                        <div class="md:col-span-2">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Logo URL</label>
                            <input @bind="tenantSettings.LogoUrl"
                                   type="url"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="px-6 py-4 border-t border-gray-200">
                <button @onclick="SaveGeneralSettings"
                        disabled="@(!isFormValid || isSaving)"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed">
                    @if (isSaving)
                    {
                        <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        <text>Saving...</text>
                    }
                    else
                    {
                        <text>Save Changes</text>
                    }
                </button>
            </div>
        </div>

        <!-- Resource Limits -->
        <div class="bg-white rounded-lg shadow-lg mb-6">
            <div class="px-6 py-4 border-b border-gray-200">
                <h6 class="text-lg font-semibold text-gray-900">Resource Limits</h6>
            </div>
            <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Maximum Users</label>
                        <input @bind="tenantSettings.UserLimit"
                               type="number" 
                               min="1"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Storage Limit (GB)</label>
                        <input @bind="storageLimit"
                               type="number" 
                               min="0"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">API Calls Limit (per month)</label>
                        <input @bind="tenantSettings.ApiCallsLimit"
                               type="number" 
                               min="0"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 mb-3" />
                    </div>
                </div>
            </div>
            <div class="px-6 py-4 border-t border-gray-200">
                <button @onclick="SaveLimits"
                        disabled="@isSaving"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed">
                    Save Limits
                </button>
            </div>
        </div>
    </div>

    <!-- Current Usage -->
    <div>
        <div class="bg-white rounded-lg shadow-lg mb-6">
            <div class="px-6 py-4 border-b border-gray-200">
                <h6 class="text-lg font-semibold text-gray-900">Current Usage</h6>
            </div>
            <div class="p-6">
                <div class="mb-4">
                    <div class="flex justify-between mb-2">
                        <span class="text-sm font-medium text-gray-700">Users</span>
                        <span class="text-sm text-gray-500">@tenantSettings.CurrentUsers / @tenantSettings.UserLimit</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div class="@GetUsageBarClasses(GetUserUsagePercent()) h-2 rounded-full" style="width: @GetUserUsagePercent().ToString("F1")%"></div>
                    </div>
                </div>

                <div class="mb-4">
                    <div class="flex justify-between mb-2">
                        <span class="text-sm font-medium text-gray-700">Storage</span>
                        <span class="text-sm text-gray-500">@FormatBytes(tenantSettings.CurrentStorage) / @FormatBytes(tenantSettings.StorageLimit)</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div class="@GetUsageBarClasses(GetStorageUsagePercent()) h-2 rounded-full" style="width: @GetStorageUsagePercent().ToString("F1")%"></div>
                    </div>
                </div>

                <div class="mb-4">
                    <div class="flex justify-between mb-2">
                        <span class="text-sm font-medium text-gray-700">API Calls</span>
                        <span class="text-sm text-gray-500">@tenantSettings.CurrentApiCalls.ToString("N0") / @tenantSettings.ApiCallsLimit.ToString("N0")</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div class="@GetUsageBarClasses(GetApiCallsUsagePercent()) h-2 rounded-full" style="width: @GetApiCallsUsagePercent().ToString("F1")%"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Plan Information -->
        <div class="bg-white rounded-lg shadow-lg">
            <div class="px-6 py-4 border-b border-gray-200">
                <h6 class="text-lg font-semibold text-gray-900">Plan Information</h6>
            </div>
            <div class="p-6">
                <div class="mb-4">
                    <h5 class="text-lg font-semibold text-blue-600">@tenantSettings.Plan Plan</h5>
                    <p class="text-sm text-gray-500">
                        Active since @tenantSettings.CreatedAt.ToString("MMM dd, yyyy")
                    </p>
                </div>

                <div class="space-y-3">
                    <div class="flex items-center">
                        <svg class="h-5 w-5 text-gray-400 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z" />
                        </svg>
                        <span class="text-sm text-gray-700">@tenantSettings.UserLimit Users</span>
                    </div>
                    <div class="flex items-center">
                        <svg class="h-5 w-5 text-gray-400 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                        <span class="text-sm text-gray-700">@FormatBytes(tenantSettings.StorageLimit) Storage</span>
                    </div>
                    <div class="flex items-center">
                        <svg class="h-5 w-5 text-gray-400 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                        <span class="text-sm text-gray-700">@tenantSettings.ApiCallsLimit.ToString("N0") API Calls/month</span>
                    </div>
                </div>
            </div>
            <div class="px-6 py-4 border-t border-gray-200">
                <button @onclick="UpgradePlan"
                        class="w-full px-4 py-2 border border-blue-300 text-sm font-medium rounded-md text-blue-700 bg-white hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    @(tenantSettings.Plan == "Free" ? "Upgrade Plan" : "Change Plan")
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private ElementReference form;
    private bool isFormValid = false;
    private bool isSaving = false;
    private TenantSettingsModel tenantSettings = new();
    private int storageLimit = 1; // GB

    protected override async Task OnInitializedAsync()
    {
        // Mock data for demonstration
        tenantSettings = new TenantSettingsModel
        {
            Id = Guid.NewGuid(),
            Name = "Acme Corporation",
            Description = "Leading provider of innovative solutions",
            LogoUrl = "",
            Plan = "Pro",
            UserLimit = 50,
            StorageLimit = 107374182400, // 100 GB
            ApiCallsLimit = 100000,
            CurrentUsers = 15,
            CurrentStorage = 32212254720, // 30 GB
            CurrentApiCalls = 25000,
            CreatedAt = DateTime.UtcNow.AddMonths(-6),
            IsActive = true
        };

        storageLimit = (int)(tenantSettings.StorageLimit / 1073741824); // Convert to GB
    }

    private async Task SaveGeneralSettings()
    {
        if (!isFormValid) return;

        isSaving = true;
        try
        {
            // Simulate API call
            await Task.Delay(1000);
            Console.WriteLine("Notification");
        }
        catch (Exception)
        {
            Console.WriteLine("Notification");
        }
        finally
        {
            isSaving = false;
        }
    }

    private async Task HandleBasicSettingsSubmit()
    {
        await SaveGeneralSettings();
    }

    private async Task SaveLimits()
    {
        isSaving = true;
        try
        {
            tenantSettings.StorageLimit = storageLimit * 1073741824L; // Convert GB to bytes
            // Simulate API call
            await Task.Delay(1000);
            Console.WriteLine("Notification");
        }
        catch (Exception)
        {
            Console.WriteLine("Notification");
        }
        finally
        {
            isSaving = false;
        }
    }

    private void UpgradePlan()
    {
        Console.WriteLine("Notification");
    }

    private double GetUserUsagePercent()
    {
        return tenantSettings.UserLimit > 0 ? (double)tenantSettings.CurrentUsers / tenantSettings.UserLimit * 100 : 0;
    }

    private double GetStorageUsagePercent()
    {
        return tenantSettings.StorageLimit > 0 ? (double)tenantSettings.CurrentStorage / tenantSettings.StorageLimit * 100 : 0;
    }

    private double GetApiCallsUsagePercent()
    {
        return tenantSettings.ApiCallsLimit > 0 ? (double)tenantSettings.CurrentApiCalls / tenantSettings.ApiCallsLimit * 100 : 0;
    }

    private string GetUsageBarClasses(double percentage) => percentage switch
    {
        var x when x < 70 => "bg-green-500",
        var x when x < 90 => "bg-yellow-500",
        _ => "bg-red-500"
    };

    private string FormatBytes(long bytes)
    {
        string[] sizes = { "B", "KB", "MB", "GB", "TB" };
        double len = bytes;
        int order = 0;
        while (len >= 1024 && order < sizes.Length - 1)
        {
            order++;
            len = len / 1024;
        }
        return $"{len:0.##} {sizes[order]}";
    }

    public class TenantSettingsModel
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = "";
        public string? Description { get; set; }
        public string? LogoUrl { get; set; }
        public string Plan { get; set; } = "Free";
        public int UserLimit { get; set; } = 10;
        public long StorageLimit { get; set; } = 1073741824; // 1GB
        public int ApiCallsLimit { get; set; } = 10000;
        public int CurrentUsers { get; set; }
        public long CurrentStorage { get; set; }
        public int CurrentApiCalls { get; set; }
        public DateTime CreatedAt { get; set; }
        public bool IsActive { get; set; }
    }
}