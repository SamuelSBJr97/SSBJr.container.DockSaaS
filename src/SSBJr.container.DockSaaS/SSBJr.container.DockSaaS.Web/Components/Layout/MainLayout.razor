@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject ISnackbar Snackbar

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <AuthorizeView>
            <Authorized>
                <MudIconButton Icon="Icons.Material.Filled.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" />
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="Icons.Material.Filled.Cloud" Color="Color.Inherit" Href="/" />
            </NotAuthorized>
        </AuthorizeView>
        <MudSpacer />
        <MudText Typo="Typo.h6">DockSaaS</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudMenu Icon="Icons.Material.Filled.AccountCircle" Color="Color.Inherit" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopRight">
                    <MudMenuItem>@context.User.Identity?.Name</MudMenuItem>
                    <MudDivider />
                    <MudMenuItem OnClick="Logout">Logout</MudMenuItem>
                </MudMenu>
            </Authorized>
            <NotAuthorized>
                <MudButtonGroup Color="Color.Inherit" Variant="Variant.Text">
                    <MudButton Href="/welcome">About</MudButton>
                    <MudButton Href="/login">Login</MudButton>
                </MudButtonGroup>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    
    <AuthorizeView>
        <Authorized>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">DockSaaS</MudText>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>
        </Authorized>
    </AuthorizeView>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        try
        {
            await AuthService.LogoutAsync();
            Snackbar.Add("Logged out successfully", Severity.Success);
            Navigation.NavigateTo("/welcome", true);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error during logout: {ex.Message}", Severity.Error);
        }
    }
}
